name: Build & Publish Nightly

on:
  schedule:
    - cron: '0 21 * * *'
  # push:
  #   branches: ["main"]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [standard, quest, pico]

    steps:
    - uses: actions/checkout@v4

    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Decode Keystore and Set Environment Variables
      env:
          SIGNING_KEY_BASE64: ${{ secrets.SIGNING_KEY }}
          SIGNING_STORE_PASSWORD_SECRET: ${{ secrets.KEY_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS_SECRET: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD_SECRET: ${{ secrets.KEY_PASSWORD }}
      run: |
          echo "Decoding Keystore..."
          KEYSTORE_FILE_PATH="${{ github.workspace }}/release.jks"
          
          echo $SIGNING_KEY_BASE64 | base64 --decode > $KEYSTORE_FILE_PATH

          echo "SIGNING_STORE_FILE=$KEYSTORE_FILE_PATH" >> $GITHUB_ENV
          echo "SIGNING_STORE_PASSWORD=$SIGNING_STORE_PASSWORD_SECRET" >> $GITHUB_ENV
          echo "SIGNING_KEY_ALIAS=$SIGNING_KEY_ALIAS_SECRET" >> $GITHUB_ENV
          echo "SIGNING_KEY_PASSWORD=$SIGNING_KEY_PASSWORD_SECRET" >> $GITHUB_ENV

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Release for ${{ matrix.platform }} with Gradle
      run: ./gradlew assemble${{ matrix.platform }}Release

    - name: Clean up Keystore
      if: always()
      run: |
        rm -f "${{ github.workspace }}/release.jks"

    - name: Rename built apk
      run: |
        mv app/build/outputs/apk/${{ matrix.platform }}/release/app-${{ matrix.platform }}-release.apk app/build/outputs/apk/${{ matrix.platform }}/release/VRCAA-${{ matrix.platform }}-signed.apk

    - name: Upload signed APK artifact for ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      with:
        name: VRCAA-${{ matrix.platform }}-signed.apk
        path: app/build/outputs/apk/${{ matrix.platform }}/release/VRCAA-${{ matrix.platform }}-signed.apk

  publish:
    permissions: write-all
    if: contains(github.event.head_commit.message, '[Skip-CI]') == false
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Standard APK
      uses: actions/download-artifact@v4
      with:
        name: VRCAA-standard-signed.apk
        path: .

    - name: Download Quest APK
      uses: actions/download-artifact@v4
      with:
        name: VRCAA-quest-signed.apk
        path: .

    - name: Download Pico APK
      uses: actions/download-artifact@v4
      with:
        name: VRCAA-pico-signed.apk
        path: .

    - name: Publish release to Github
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "nightly"
        prerelease: false
        title: "${{ env.GITHUB_SHA }}"
        files: |
          VRCAA-standard-signed.apk
          VRCAA-quest-signed.apk
          VRCAA-pico-signed.apk
